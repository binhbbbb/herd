( Creates words that do nothing )
: createnop create does> ;

( NOPS for making some stuff more obvious )
createnop listens-to
createnop listened-by

( set up variables )
500 0 !
: var create 0 @ 1 + dup 0 ! dup null swap ! , does> ;
( Move the storage pointer the amount of places on stack )
: allot 0 @ + 0 ! ;

( Insert one value into the list we're creating )
: |  ( addr value -- addr+1 )
  over ! 1 + 
;

( )
: ||  ( addr value1 value2 -- addr+2 )
  rot tuck ! tuck 1 + ! 2 + 
;

: stackvar stack-create 0 @ 1 + dup 0 ! dup null swap ! , does> ;
: record 
  word "." cat
  begin 
    dup word dup "endrecord" equals not 
  while 
    cat stackvar 
  repeat 
  drop drop drop  
;

( Attempt at something smalltalkish )
: inside-it add-component ;
: as-column-names set-column-headers ;
: as-visible-columns set-visible-columns ;
: as-caption set-caption ;
: as-value set-value ;
: as-click-listener find set-click-listener ;
: create-a-SQL-container create-SQL-container ;
: create-a-filtered-SQL-container create-filtered-SQL-container ;
: as-container-data-source set-container-data-source drop ;
: as-name ! ;
: as-width set-width ;
: as-height set-height ;
: uses-it @ swap ;
: add-it add-component ;
( caption -- Button )
: a-button new-button swap set-caption ;
: a-label new-label ;
: a-text-field new-text-field ;
: a-combo-box new-combo-box ;
: a-table new-table ;
: a-select new-select ;
: a-window new-window ;
: a-text-field new-text-field ;
( : -> ' EXECUTE , COMPILE ! ; IMMEDIATE )
: prop get-property ;
: from-stack swap ;

( Space for lists )
var list[ 100 allot

( Stuff to do with lists )
: ]-as-params-for-query | list-terminator | drop ;
: ]-is-used-by | list-terminator | drop ;


( Adds buttons in a list to a layout )

( executes a token for each entry in a list )

: map
 ( TODO do this sometime )
;

( Loads a list of buttons and clicklisteners to )
(  a layout )
: ]addButtonsToLayout
  || list-terminator | drop
  list[
  begin
    dup @ list-terminator equals not
  while  ( layout addr ) 
    dup dup @ swap 1 + @ a-button swap set-click-listener 
    rot swap add-it swap 2 + 
  repeat
  drop
;

( loads a list of properties to an item)
( item record_name -- )
: load-props
  "." cat
  list[
  begin
    dup @ list-terminator equals not
  while
    rot swap tuck @ get-property
    2swap dup @ rot dup rot
    cat 2swap -rot
    swap find execute !
    1 +
  repeat
  drop drop drop
;

( addr record_name -- record_name )
: ]-load-props-to | list-terminator | drop word load-props ;
  
( These words are more filling and less taste )
createnop has createnop a
createnop the createnop with
createnop and createnop or
createnop is  createnop to
createnop use createnop contains:
